name: Deploy CI/CD
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
          token: '${{ secrets.SUB_TOKEN }}'

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Remove previous snapshot.jar
        run: rm -rf ./build/libs/*.jar

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image And Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/codin-backend:latest
          cache-from: type=registry,mode=max,ref=${{ secrets.DOCKERHUB_USERNAME }}/codin-backend:cache,image-manifest=true,oci-mediatypes=true
          cache-to: type=registry,ref=${{ env.REGISTRY }}/codin-backend:cache,image-manifest=true,oci-mediatypes=true

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          password: ${{secrets.PASSWORD}}
          port: ${{secrets.PORT}}
          script: |
            echo ${{ secrets.PASSWORD }} | sudo -S su -c "
              docker ps -a
              docker rm -f codin-backend || true
              docker pull ${{ secrets.DOCKERHUB_USERNAME }}/codin-backend:latest
              docker run -d --net codin-docker_default -p 8080:8080 --name codin-backend \
                -v /opt/project/backend-data/:/opt/project/backend-data/ \
                ${{ secrets.DOCKERHUB_USERNAME }}/codin-backend:latest              
              docker images -f "dangling=true" -q | xargs sudo docker rmi || true
              docker ps -a
            "
